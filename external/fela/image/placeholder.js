import React from 'react';
import PropTypes from 'prop-types';
import { getContext } from 'recompose';
import { createComponent, withTheme } from 'react-fela';

var Image = createComponent(function (_ref) {
  var width = _ref.width,
      height = _ref.height,
      theme = _ref.theme,
      circle = _ref.circle;
  return {
    width: width,
    height: height,
    backgroundColor: theme.dark5,
    borderRadius: circle ? '50%' : 0,
    '> img': {
      opacity: 0.4,
      center: true,
      transition: 'opacity 0.5s ease-in-out',
      maxWidth: '33%'
    },
    '> svg': {
      opacity: 0.4,
      center: true,
      transition: 'opacity 0.5s ease-in-out',
      maxWidth: '33%'
    },
    onHover: {
      '> img': {
        opacity: 0.8
      },
      '> svg': {
        opacity: 0.8
      }
    }
  };
}, getContext({
  amp: PropTypes.bool
})(withTheme(function (_ref2) {
  var className = _ref2.className,
      theme = _ref2.theme,
      amp = _ref2.amp;
  return React.createElement(
    'div',
    { className: className },
    !amp && typeof theme.logo === 'string' && React.createElement('img', { src: theme.logo, alt: 'placeholder' }),
    !amp && typeof theme.logo === 'function' && theme.logo()
  );
})), ['onClick', 'amp']);
Image.displayName = 'Placeholder';
Image.propTypes = {
  circle: PropTypes.bool,
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};
Image.defaultProps = {
  circle: false,
  width: undefined,
  height: undefined
};
export default Image;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dGVybmFsL2ZlbGEvaW1hZ2UvcGxhY2Vob2xkZXIuZXM2Il0sIm5hbWVzIjpbIlJlYWN0IiwiUHJvcFR5cGVzIiwiZ2V0Q29udGV4dCIsImNyZWF0ZUNvbXBvbmVudCIsIndpdGhUaGVtZSIsIkltYWdlIiwid2lkdGgiLCJoZWlnaHQiLCJ0aGVtZSIsImNpcmNsZSIsImJhY2tncm91bmRDb2xvciIsImRhcms1IiwiYm9yZGVyUmFkaXVzIiwib3BhY2l0eSIsImNlbnRlciIsInRyYW5zaXRpb24iLCJtYXhXaWR0aCIsIm9uSG92ZXIiLCJhbXAiLCJib29sIiwiY2xhc3NOYW1lIiwibG9nbyIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwib25lT2ZUeXBlIiwic3RyaW5nIiwibnVtYmVyIiwiZGVmYXVsdFByb3BzIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLFVBQVQsUUFBMkIsV0FBM0I7QUFDQSxTQUFTQyxlQUFULEVBQTBCQyxTQUExQixRQUEyQyxZQUEzQzs7QUFFQSxJQUFNQyxRQUFRRixnQkFDWjtBQUFBLE1BQUdHLEtBQUgsUUFBR0EsS0FBSDtBQUFBLE1BQVVDLE1BQVYsUUFBVUEsTUFBVjtBQUFBLE1BQWtCQyxLQUFsQixRQUFrQkEsS0FBbEI7QUFBQSxNQUF5QkMsTUFBekIsUUFBeUJBLE1BQXpCO0FBQUEsU0FBdUM7QUFDckNILGdCQURxQztBQUVyQ0Msa0JBRnFDO0FBR3JDRyxxQkFBaUJGLE1BQU1HLEtBSGM7QUFJckNDLGtCQUFjSCxTQUFTLEtBQVQsR0FBaUIsQ0FKTTtBQUtyQyxhQUFTO0FBQ1BJLGVBQVMsR0FERjtBQUVQQyxjQUFRLElBRkQ7QUFHUEMsa0JBQVksMEJBSEw7QUFJUEMsZ0JBQVU7QUFKSCxLQUw0QjtBQVdyQyxhQUFTO0FBQ1BILGVBQVMsR0FERjtBQUVQQyxjQUFRLElBRkQ7QUFHUEMsa0JBQVksMEJBSEw7QUFJUEMsZ0JBQVU7QUFKSCxLQVg0QjtBQWlCckNDLGFBQVM7QUFDUCxlQUFTO0FBQ1BKLGlCQUFTO0FBREYsT0FERjtBQUlQLGVBQVM7QUFDUEEsaUJBQVM7QUFERjtBQUpGO0FBakI0QixHQUF2QztBQUFBLENBRFksRUEyQlpYLFdBQVc7QUFDVGdCLE9BQUtqQixVQUFVa0I7QUFETixDQUFYLEVBR0VmLFVBQVU7QUFBQSxNQUFHZ0IsU0FBSCxTQUFHQSxTQUFIO0FBQUEsTUFBY1osS0FBZCxTQUFjQSxLQUFkO0FBQUEsTUFBcUJVLEdBQXJCLFNBQXFCQSxHQUFyQjtBQUFBLFNBQ1I7QUFBQTtBQUFBLE1BQUssV0FBV0UsU0FBaEI7QUFDRyxLQUFDRixHQUFELElBQ0MsT0FBT1YsTUFBTWEsSUFBYixLQUFzQixRQUR2QixJQUVHLDZCQUFLLEtBQUtiLE1BQU1hLElBQWhCLEVBQXNCLEtBQUksYUFBMUIsR0FITjtBQUtHLEtBQUNILEdBQUQsSUFBUSxPQUFPVixNQUFNYSxJQUFiLEtBQXNCLFVBQTlCLElBQTRDYixNQUFNYSxJQUFOO0FBTC9DLEdBRFE7QUFBQSxDQUFWLENBSEYsQ0EzQlksRUF3Q1osQ0FBQyxTQUFELEVBQVksS0FBWixDQXhDWSxDQUFkO0FBMENBaEIsTUFBTWlCLFdBQU4sR0FBb0IsYUFBcEI7QUFDQWpCLE1BQU1rQixTQUFOLEdBQWtCO0FBQ2hCZCxVQUFRUixVQUFVa0IsSUFERjtBQUVoQmIsU0FBT0wsVUFBVXVCLFNBQVYsQ0FBb0IsQ0FBQ3ZCLFVBQVV3QixNQUFYLEVBQW1CeEIsVUFBVXlCLE1BQTdCLENBQXBCLENBRlM7QUFHaEJuQixVQUFRTixVQUFVdUIsU0FBVixDQUFvQixDQUFDdkIsVUFBVXdCLE1BQVgsRUFBbUJ4QixVQUFVeUIsTUFBN0IsQ0FBcEI7QUFIUSxDQUFsQjtBQUtBckIsTUFBTXNCLFlBQU4sR0FBcUI7QUFDbkJsQixVQUFRLEtBRFc7QUFFbkJILFNBQU9zQixTQUZZO0FBR25CckIsVUFBUXFCO0FBSFcsQ0FBckI7QUFLQSxlQUFldkIsS0FBZiIsImZpbGUiOiJleHRlcm5hbC9mZWxhL2ltYWdlL3BsYWNlaG9sZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXRDb250ZXh0IH0gZnJvbSAncmVjb21wb3NlJztcbmltcG9ydCB7IGNyZWF0ZUNvbXBvbmVudCwgd2l0aFRoZW1lIH0gZnJvbSAncmVhY3QtZmVsYSc7XG5cbmNvbnN0IEltYWdlID0gY3JlYXRlQ29tcG9uZW50KFxuICAoeyB3aWR0aCwgaGVpZ2h0LCB0aGVtZSwgY2lyY2xlIH0pID0+ICh7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuZGFyazUsXG4gICAgYm9yZGVyUmFkaXVzOiBjaXJjbGUgPyAnNTAlJyA6IDAsXG4gICAgJz4gaW1nJzoge1xuICAgICAgb3BhY2l0eTogMC40LFxuICAgICAgY2VudGVyOiB0cnVlLFxuICAgICAgdHJhbnNpdGlvbjogJ29wYWNpdHkgMC41cyBlYXNlLWluLW91dCcsXG4gICAgICBtYXhXaWR0aDogJzMzJScsXG4gICAgfSxcbiAgICAnPiBzdmcnOiB7XG4gICAgICBvcGFjaXR5OiAwLjQsXG4gICAgICBjZW50ZXI6IHRydWUsXG4gICAgICB0cmFuc2l0aW9uOiAnb3BhY2l0eSAwLjVzIGVhc2UtaW4tb3V0JyxcbiAgICAgIG1heFdpZHRoOiAnMzMlJyxcbiAgICB9LFxuICAgIG9uSG92ZXI6IHtcbiAgICAgICc+IGltZyc6IHtcbiAgICAgICAgb3BhY2l0eTogMC44LFxuICAgICAgfSxcbiAgICAgICc+IHN2Zyc6IHtcbiAgICAgICAgb3BhY2l0eTogMC44LFxuICAgICAgfSxcbiAgICB9LFxuICB9KSxcbiAgZ2V0Q29udGV4dCh7XG4gICAgYW1wOiBQcm9wVHlwZXMuYm9vbCxcbiAgfSkoXG4gICAgd2l0aFRoZW1lKCh7IGNsYXNzTmFtZSwgdGhlbWUsIGFtcCB9KSA9PiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgeyFhbXAgJiZcbiAgICAgICAgICB0eXBlb2YgdGhlbWUubG9nbyA9PT0gJ3N0cmluZycgJiYgKFxuICAgICAgICAgICAgPGltZyBzcmM9e3RoZW1lLmxvZ299IGFsdD1cInBsYWNlaG9sZGVyXCIgLz5cbiAgICAgICAgICApfVxuICAgICAgICB7IWFtcCAmJiB0eXBlb2YgdGhlbWUubG9nbyA9PT0gJ2Z1bmN0aW9uJyAmJiB0aGVtZS5sb2dvKCl9XG4gICAgICA8L2Rpdj5cbiAgICApKSxcbiAgKSxcbiAgWydvbkNsaWNrJywgJ2FtcCddLFxuKTtcbkltYWdlLmRpc3BsYXlOYW1lID0gJ1BsYWNlaG9sZGVyJztcbkltYWdlLnByb3BUeXBlcyA9IHtcbiAgY2lyY2xlOiBQcm9wVHlwZXMuYm9vbCxcbiAgd2lkdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgaGVpZ2h0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSksXG59O1xuSW1hZ2UuZGVmYXVsdFByb3BzID0ge1xuICBjaXJjbGU6IGZhbHNlLFxuICB3aWR0aDogdW5kZWZpbmVkLFxuICBoZWlnaHQ6IHVuZGVmaW5lZCxcbn07XG5leHBvcnQgZGVmYXVsdCBJbWFnZTtcbiJdfQ==
