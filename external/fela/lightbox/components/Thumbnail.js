'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _noImportant = require('aphrodite/no-important');

var _theme = require('../theme');

var _theme2 = _interopRequireDefault(_theme);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Thumbnail(_ref, _ref2) {
  var index = _ref.index,
      src = _ref.src,
      thumbnail = _ref.thumbnail,
      active = _ref.active,
      _onClick = _ref.onClick;
  var theme = _ref2.theme;

  var url = thumbnail || src;
  var classes = _noImportant.StyleSheet.create((0, _utils.deepMerge)(defaultStyles, theme));

  return _react2.default.createElement('div', {
    className: (0, _noImportant.css)(classes.thumbnail, active && classes.thumbnail__active),
    onClick: function onClick(e) {
      e.preventDefault();
      e.stopPropagation();
      _onClick(index);
    },
    style: { backgroundImage: 'url("' + url + '")' }
  });
}

Thumbnail.propTypes = {
  active: _propTypes2.default.bool,
  index: _propTypes2.default.number,
  onClick: _propTypes2.default.func.isRequired,
  src: _propTypes2.default.string,
  thumbnail: _propTypes2.default.string
};

Thumbnail.contextTypes = {
  theme: _propTypes2.default.object.isRequired
};

var defaultStyles = {
  thumbnail: {
    backgroundPosition: 'center',
    backgroundSize: 'cover',
    borderRadius: 2,
    boxShadow: 'inset 0 0 0 1px hsla(0,0%,100%,.2)',
    cursor: 'pointer',
    display: 'inline-block',
    height: _theme2.default.thumbnail.size,
    margin: _theme2.default.thumbnail.gutter,
    overflow: 'hidden',
    width: _theme2.default.thumbnail.size
  },
  thumbnail__active: {
    boxShadow: 'inset 0 0 0 2px ' + _theme2.default.thumbnail.activeBorderColor
  }
};

exports.default = Thumbnail;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dGVybmFsL2ZlbGEvbGlnaHRib3gvY29tcG9uZW50cy9UaHVtYm5haWwuZXM2Il0sIm5hbWVzIjpbIlRodW1ibmFpbCIsImluZGV4Iiwic3JjIiwidGh1bWJuYWlsIiwiYWN0aXZlIiwib25DbGljayIsInRoZW1lIiwidXJsIiwiY2xhc3NlcyIsImNyZWF0ZSIsImRlZmF1bHRTdHlsZXMiLCJ0aHVtYm5haWxfX2FjdGl2ZSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImJhY2tncm91bmRJbWFnZSIsInByb3BUeXBlcyIsImJvb2wiLCJudW1iZXIiLCJmdW5jIiwiaXNSZXF1aXJlZCIsInN0cmluZyIsImNvbnRleHRUeXBlcyIsIm9iamVjdCIsImJhY2tncm91bmRQb3NpdGlvbiIsImJhY2tncm91bmRTaXplIiwiYm9yZGVyUmFkaXVzIiwiYm94U2hhZG93IiwiY3Vyc29yIiwiZGlzcGxheSIsImhlaWdodCIsInNpemUiLCJtYXJnaW4iLCJndXR0ZXIiLCJvdmVyZmxvdyIsIndpZHRoIiwiYWN0aXZlQm9yZGVyQ29sb3IiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFFQTs7OztBQUNBOzs7O0FBRUEsU0FBU0EsU0FBVCxjQUEwRTtBQUFBLE1BQXJEQyxLQUFxRCxRQUFyREEsS0FBcUQ7QUFBQSxNQUE5Q0MsR0FBOEMsUUFBOUNBLEdBQThDO0FBQUEsTUFBekNDLFNBQXlDLFFBQXpDQSxTQUF5QztBQUFBLE1BQTlCQyxNQUE4QixRQUE5QkEsTUFBOEI7QUFBQSxNQUF0QkMsUUFBc0IsUUFBdEJBLE9BQXNCO0FBQUEsTUFBVEMsS0FBUyxTQUFUQSxLQUFTOztBQUN4RSxNQUFNQyxNQUFNSixhQUFhRCxHQUF6QjtBQUNBLE1BQU1NLFVBQVUsd0JBQVdDLE1BQVgsQ0FBa0Isc0JBQVVDLGFBQVYsRUFBeUJKLEtBQXpCLENBQWxCLENBQWhCOztBQUVBLFNBQ0U7QUFDRSxlQUFXLHNCQUFJRSxRQUFRTCxTQUFaLEVBQXVCQyxVQUFVSSxRQUFRRyxpQkFBekMsQ0FEYjtBQUVFLGFBQVMsaUJBQUNDLENBQUQsRUFBTztBQUNkQSxRQUFFQyxjQUFGO0FBQ0FELFFBQUVFLGVBQUY7QUFDQVQsZUFBUUosS0FBUjtBQUNELEtBTkg7QUFPRSxXQUFPLEVBQUVjLDJCQUF5QlIsR0FBekIsT0FBRjtBQVBULElBREY7QUFXRDs7QUFFRFAsVUFBVWdCLFNBQVYsR0FBc0I7QUFDcEJaLFVBQVEsb0JBQVVhLElBREU7QUFFcEJoQixTQUFPLG9CQUFVaUIsTUFGRztBQUdwQmIsV0FBUyxvQkFBVWMsSUFBVixDQUFlQyxVQUhKO0FBSXBCbEIsT0FBSyxvQkFBVW1CLE1BSks7QUFLcEJsQixhQUFXLG9CQUFVa0I7QUFMRCxDQUF0Qjs7QUFRQXJCLFVBQVVzQixZQUFWLEdBQXlCO0FBQ3ZCaEIsU0FBTyxvQkFBVWlCLE1BQVYsQ0FBaUJIO0FBREQsQ0FBekI7O0FBSUEsSUFBTVYsZ0JBQWdCO0FBQ3BCUCxhQUFXO0FBQ1RxQix3QkFBb0IsUUFEWDtBQUVUQyxvQkFBZ0IsT0FGUDtBQUdUQyxrQkFBYyxDQUhMO0FBSVRDLGVBQVcsb0NBSkY7QUFLVEMsWUFBUSxTQUxDO0FBTVRDLGFBQVMsY0FOQTtBQU9UQyxZQUFRLGdCQUFTM0IsU0FBVCxDQUFtQjRCLElBUGxCO0FBUVRDLFlBQVEsZ0JBQVM3QixTQUFULENBQW1COEIsTUFSbEI7QUFTVEMsY0FBVSxRQVREO0FBVVRDLFdBQU8sZ0JBQVNoQyxTQUFULENBQW1CNEI7QUFWakIsR0FEUztBQWFwQnBCLHFCQUFtQjtBQUNqQmdCLG9DQUE4QixnQkFBU3hCLFNBQVQsQ0FBbUJpQztBQURoQztBQWJDLENBQXRCOztrQkFrQmVwQyxTIiwiZmlsZSI6ImV4dGVybmFsL2ZlbGEvbGlnaHRib3gvY29tcG9uZW50cy9UaHVtYm5haWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywgU3R5bGVTaGVldCB9IGZyb20gJ2FwaHJvZGl0ZS9uby1pbXBvcnRhbnQnO1xuXG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnLi4vdGhlbWUnO1xuaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5mdW5jdGlvbiBUaHVtYm5haWwoeyBpbmRleCwgc3JjLCB0aHVtYm5haWwsIGFjdGl2ZSwgb25DbGljayB9LCB7IHRoZW1lIH0pIHtcbiAgY29uc3QgdXJsID0gdGh1bWJuYWlsIHx8IHNyYztcbiAgY29uc3QgY2xhc3NlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKGRlZXBNZXJnZShkZWZhdWx0U3R5bGVzLCB0aGVtZSkpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjc3MoY2xhc3Nlcy50aHVtYm5haWwsIGFjdGl2ZSAmJiBjbGFzc2VzLnRodW1ibmFpbF9fYWN0aXZlKX1cbiAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgb25DbGljayhpbmRleCk7XG4gICAgICB9fVxuICAgICAgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKFwiJHt1cmx9XCIpYCB9fVxuICAgIC8+XG4gICk7XG59XG5cblRodW1ibmFpbC5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIGluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBzcmM6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRodW1ibmFpbDogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cblRodW1ibmFpbC5jb250ZXh0VHlwZXMgPSB7XG4gIHRoZW1lOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG59O1xuXG5jb25zdCBkZWZhdWx0U3R5bGVzID0ge1xuICB0aHVtYm5haWw6IHtcbiAgICBiYWNrZ3JvdW5kUG9zaXRpb246ICdjZW50ZXInLFxuICAgIGJhY2tncm91bmRTaXplOiAnY292ZXInLFxuICAgIGJvcmRlclJhZGl1czogMixcbiAgICBib3hTaGFkb3c6ICdpbnNldCAwIDAgMCAxcHggaHNsYSgwLDAlLDEwMCUsLjIpJyxcbiAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBoZWlnaHQ6IGRlZmF1bHRzLnRodW1ibmFpbC5zaXplLFxuICAgIG1hcmdpbjogZGVmYXVsdHMudGh1bWJuYWlsLmd1dHRlcixcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgd2lkdGg6IGRlZmF1bHRzLnRodW1ibmFpbC5zaXplLFxuICB9LFxuICB0aHVtYm5haWxfX2FjdGl2ZToge1xuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDJweCAke2RlZmF1bHRzLnRodW1ibmFpbC5hY3RpdmVCb3JkZXJDb2xvcn1gLFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgVGh1bWJuYWlsO1xuIl19
