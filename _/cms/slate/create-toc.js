'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getVisible = undefined;

var _set2 = require('lodash/set');

var _set3 = _interopRequireDefault(_set2);

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getAllBlocks = function getAllBlocks(nodes, mapper, parent) {
  var arr = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  return nodes.reduce(function (state, node) {
    arr.push(node);
    mapper(node, parent);
    if (node.nodes) {
      arr = getAllBlocks(node.nodes, mapper, node, arr);
    }
    return arr;
  }, arr);
};

exports.default = function (value) {
  var withKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if (!(0, _get3.default)(value, 'document.nodes')) {
    return [];
  }
  var toc = { children: [] };
  var chapterPath = [-1, -1, -1, -1, -1, -1];

  getAllBlocks(value.document.nodes, function (node, parent) {
    var level = node.type === 'heading-one' ? 0 : node.type === 'heading-two' ? 1 : node.type === 'heading-three' ? 2 : node.type === 'heading-four' ? 3 : node.type === 'heading-five' ? 4 : node.type === 'heading-six' ? 5 : null;
    if (level !== null) {
      chapterPath[level] = chapterPath[level] + 1;
      var path = chapterPath.slice(0, level + 1).map(function (x) {
        return x < 0 ? 0 : x;
      });
      var pathStr = path.reduce(function (result, x, i) {
        var newResult = [result, 'children'].filter(function (x) {
          return x;
        }).join('.');
        if ((0, _get3.default)(toc, newResult)) {
          return newResult + '[' + (x > 0 ? x : 0) + ']';
        }
        return result;
      });

      var n = {
        children: [],
        text: node.text,
        id: node.data.get('id')
      };
      if (withKeys) {
        n.key = node.key;
      }
      (0, _set3.default)(toc, pathStr, n);
    }
  });
  return toc.children;
};

function isElementInViewport(el) {
  var rect = el.getBoundingClientRect();
  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) /* or $(window).height() */ && rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */
  ;
}

var getVisible = exports.getVisible = function getVisible(toc) {
  if (typeof window === 'undefined' || !toc.length) {
    return;
  }
  var vis = toc.filter(function (_ref) {
    var key = _ref.key;

    var item = document.querySelector('[data-key="' + key + '"]');
    if (!item) return false;
    return isElementInViewport(item);
  });
  return (vis[Math.floor(vis.length / 2)] || vis[0] || {}).key;
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dGVybmFsL3NsYXRlL2NyZWF0ZS10b2MuZXM2Il0sIm5hbWVzIjpbImdldEFsbEJsb2NrcyIsIm5vZGVzIiwibWFwcGVyIiwicGFyZW50IiwiYXJyIiwicmVkdWNlIiwic3RhdGUiLCJub2RlIiwicHVzaCIsInZhbHVlIiwid2l0aEtleXMiLCJ0b2MiLCJjaGlsZHJlbiIsImNoYXB0ZXJQYXRoIiwiZG9jdW1lbnQiLCJsZXZlbCIsInR5cGUiLCJwYXRoIiwic2xpY2UiLCJtYXAiLCJ4IiwicGF0aFN0ciIsInJlc3VsdCIsImkiLCJuZXdSZXN1bHQiLCJmaWx0ZXIiLCJqb2luIiwibiIsInRleHQiLCJpZCIsImRhdGEiLCJnZXQiLCJrZXkiLCJpc0VsZW1lbnRJblZpZXdwb3J0IiwiZWwiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwibGVmdCIsImJvdHRvbSIsIndpbmRvdyIsImlubmVySGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50SGVpZ2h0IiwicmlnaHQiLCJpbm5lcldpZHRoIiwiY2xpZW50V2lkdGgiLCJnZXRWaXNpYmxlIiwibGVuZ3RoIiwidmlzIiwiaXRlbSIsInF1ZXJ5U2VsZWN0b3IiLCJNYXRoIiwiZmxvb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsZUFBZSxTQUFmQSxZQUFlLENBQUNDLEtBQUQsRUFBUUMsTUFBUixFQUFnQkMsTUFBaEI7QUFBQSxNQUF3QkMsR0FBeEIsdUVBQThCLEVBQTlCO0FBQUEsU0FDbkJILE1BQU1JLE1BQU4sQ0FBYSxVQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBaUI7QUFDNUJILFFBQUlJLElBQUosQ0FBU0QsSUFBVDtBQUNBTCxXQUFPSyxJQUFQLEVBQWFKLE1BQWI7QUFDQSxRQUFJSSxLQUFLTixLQUFULEVBQWdCO0FBQ2RHLFlBQU1KLGFBQWFPLEtBQUtOLEtBQWxCLEVBQXlCQyxNQUF6QixFQUFpQ0ssSUFBakMsRUFBdUNILEdBQXZD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YSxNQUFPO0FBQy9CLE1BQUksT0FBT1AsTUFBUCxLQUFrQixXQUFsQixJQUFpQyxDQUFDN0IsSUFBSXFDLE1BQTFDLEVBQWtEO0FBQ2hEO0FBQ0Q7QUFDRCxNQUFNQyxNQUFNdEMsSUFBSWMsTUFBSixDQUFXLGdCQUFhO0FBQUEsUUFBVk8sR0FBVSxRQUFWQSxHQUFVOztBQUNsQyxRQUFNa0IsT0FBT3BDLFNBQVNxQyxhQUFULGlCQUFxQ25CLEdBQXJDLFFBQWI7QUFDQSxRQUFJLENBQUNrQixJQUFMLEVBQVcsT0FBTyxLQUFQO0FBQ1gsV0FBT2pCLG9CQUFvQmlCLElBQXBCLENBQVA7QUFDRCxHQUpXLENBQVo7QUFLQSxTQUFPLENBQUNELElBQUlHLEtBQUtDLEtBQUwsQ0FBV0osSUFBSUQsTUFBSixHQUFhLENBQXhCLENBQUosS0FBbUNDLElBQUksQ0FBSixDQUFuQyxJQUE2QyxFQUE5QyxFQUFrRGpCLEdBQXpEO0FBQ0QsQ0FWTSIsImZpbGUiOiJleHRlcm5hbC9zbGF0ZS9jcmVhdGUtdG9jLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0LCBzZXQgfSBmcm9tICdsb2Rhc2gnO1xuXG5jb25zdCBnZXRBbGxCbG9ja3MgPSAobm9kZXMsIG1hcHBlciwgcGFyZW50LCBhcnIgPSBbXSkgPT5cbiAgbm9kZXMucmVkdWNlKChzdGF0ZSwgbm9kZSkgPT4ge1xuICAgIGFyci5wdXNoKG5vZGUpO1xuICAgIG1hcHBlcihub2RlLCBwYXJlbnQpO1xuICAgIGlmIChub2RlLm5vZGVzKSB7XG4gICAgICBhcnIgPSBnZXRBbGxCbG9ja3Mobm9kZS5ub2RlcywgbWFwcGVyLCBub2RlLCBhcnIpO1xuICAgIH1cbiAgICByZXR1cm4gYXJyO1xuICB9LCBhcnIpO1xuXG5leHBvcnQgZGVmYXVsdCAodmFsdWUsIHdpdGhLZXlzID0gdHJ1ZSkgPT4ge1xuICBpZiAoIWdldCh2YWx1ZSwgJ2RvY3VtZW50Lm5vZGVzJykpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgY29uc3QgdG9jID0geyBjaGlsZHJlbjogW10gfTtcbiAgY29uc3QgY2hhcHRlclBhdGggPSBbLTEsIC0xLCAtMSwgLTEsIC0xLCAtMV07XG5cbiAgZ2V0QWxsQmxvY2tzKHZhbHVlLmRvY3VtZW50Lm5vZGVzLCAobm9kZSwgcGFyZW50KSA9PiB7XG4gICAgY29uc3QgbGV2ZWwgPVxuICAgICAgbm9kZS50eXBlID09PSAnaGVhZGluZy1vbmUnXG4gICAgICAgID8gMFxuICAgICAgICA6IG5vZGUudHlwZSA9PT0gJ2hlYWRpbmctdHdvJ1xuICAgICAgICAgID8gMVxuICAgICAgICAgIDogbm9kZS50eXBlID09PSAnaGVhZGluZy10aHJlZSdcbiAgICAgICAgICAgID8gMlxuICAgICAgICAgICAgOiBub2RlLnR5cGUgPT09ICdoZWFkaW5nLWZvdXInXG4gICAgICAgICAgICAgID8gM1xuICAgICAgICAgICAgICA6IG5vZGUudHlwZSA9PT0gJ2hlYWRpbmctZml2ZSdcbiAgICAgICAgICAgICAgICA/IDRcbiAgICAgICAgICAgICAgICA6IG5vZGUudHlwZSA9PT0gJ2hlYWRpbmctc2l4JyA/IDUgOiBudWxsO1xuICAgIGlmIChsZXZlbCAhPT0gbnVsbCkge1xuICAgICAgY2hhcHRlclBhdGhbbGV2ZWxdID0gY2hhcHRlclBhdGhbbGV2ZWxdICsgMTtcbiAgICAgIGNvbnN0IHBhdGggPSBjaGFwdGVyUGF0aC5zbGljZSgwLCBsZXZlbCArIDEpLm1hcCh4ID0+IHggPCAwID8gMCA6IHgpO1xuICAgICAgY29uc3QgcGF0aFN0ciA9IHBhdGgucmVkdWNlKChyZXN1bHQsIHgsIGkpID0+IHtcbiAgICAgICAgY29uc3QgbmV3UmVzdWx0ID0gW3Jlc3VsdCwgJ2NoaWxkcmVuJ10uZmlsdGVyKHggPT4geCkuam9pbignLicpO1xuICAgICAgICBpZiAoZ2V0KHRvYywgbmV3UmVzdWx0KSkge1xuICAgICAgICAgIHJldHVybiBgJHtuZXdSZXN1bHR9WyR7eCA+IDAgPyB4IDogMH1dYDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IG4gPSB7XG4gICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgdGV4dDogbm9kZS50ZXh0LFxuICAgICAgICBpZDogbm9kZS5kYXRhLmdldCgnaWQnKSxcbiAgICAgIH07XG4gICAgICBpZiAod2l0aEtleXMpIHtcbiAgICAgICAgbi5rZXkgPSBub2RlLmtleTtcbiAgICAgIH1cbiAgICAgIHNldCh0b2MsIHBhdGhTdHIsIG4pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0b2MuY2hpbGRyZW47XG59O1xuXG5mdW5jdGlvbiBpc0VsZW1lbnRJblZpZXdwb3J0KGVsKSB7XG4gIGNvbnN0IHJlY3QgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgcmV0dXJuIChcbiAgICByZWN0LnRvcCA+PSAwICYmXG4gICAgcmVjdC5sZWZ0ID49IDAgJiZcbiAgICByZWN0LmJvdHRvbSA8PVxuICAgICAgKHdpbmRvdy5pbm5lckhlaWdodCB8fFxuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KSAvKiBvciAkKHdpbmRvdykuaGVpZ2h0KCkgKi8gJiZcbiAgICByZWN0LnJpZ2h0IDw9XG4gICAgICAod2luZG93LmlubmVyV2lkdGggfHxcbiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKSAvKiBvciAkKHdpbmRvdykud2lkdGgoKSAqL1xuICApO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0VmlzaWJsZSA9IHRvYyA9PiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyB8fCAhdG9jLmxlbmd0aCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB2aXMgPSB0b2MuZmlsdGVyKCh7IGtleSB9KSA9PiB7XG4gICAgY29uc3QgaXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLWtleT1cIiR7a2V5fVwiXWApO1xuICAgIGlmICghaXRlbSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBpc0VsZW1lbnRJblZpZXdwb3J0KGl0ZW0pO1xuICB9KTtcbiAgcmV0dXJuICh2aXNbTWF0aC5mbG9vcih2aXMubGVuZ3RoIC8gMildIHx8IHZpc1swXSB8fCB7fSkua2V5O1xufTtcbiJdfQ==
