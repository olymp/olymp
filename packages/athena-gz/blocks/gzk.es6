import React from 'react';
import { graphql, gql } from 'olymp-utils';
import { createComponent, Grid, Container } from 'olymp-fela';
import { camelCase, groupBy } from 'lodash';
import { withPropsOnChange, withState, compose } from 'recompose';
import tinycolor from 'tinycolor2';

const Item = createComponent(
  ({ theme, color, isActive, margin, onMouseEnter }) => ({
    color: isActive && color,
    cursor: !!onMouseEnter && 'pointer',
    opacity: !!onMouseEnter && 0.8,
    textDecoration: isActive && 'underline',
    marginTop: margin && theme.space3,
    position: 'relative',
    paddingLeft: theme.space2,
    marginLeft: theme.space2,
    onHover: !!onMouseEnter && {
      opacity: 1,
    },
    onBefore: {
      content: '"â– "',
      color,
      position: 'absolute',
      left: -8,
    },
  }),
  'li',
  ({ color, active, margin, ...p }) => Object.keys(p),
);

const Map = createComponent(
  ({ theme, items, activeItem }) => {
    const gStyles = {};

    items.forEach((item) => {
      gStyles[`> #${camelCase(item.name)}`] = {
        fill: tinycolor(item.color)
          .setAlpha(activeItem === camelCase(item.name) ? 1 : 0.5)
          .toRgbString(),
        cursor: 'pointer',
        onHover: {
          fill: item.color,
        },
      };
      gStyles[`> #${camelCase(`path${item.name}`)}`] = {
        opacity: activeItem === camelCase(item.name) ? 1 : 0,
        stroke: theme.color,
        transition: 'opacity 0.3s ease-in-out',
      };
      gStyles[`> #${camelCase(`entry${item.name}`)}`] = {
        opacity: activeItem === camelCase(item.name) ? 1 : 0,
        stroke: theme.color,
        fill: theme.color,
        transition: 'opacity 0.3s ease-in-out',
      };
    });

    return {
      width: '100%',
      '> g': gStyles,
    };
  },
  ({ className, setActiveItem, activeItem, ...p }) => (
    <svg
      width="100%"
      viewBox="0 0 2305 1808"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <defs>
        <path
          d="M1386.23279,732.040942 C1541.10021,609.77854 1751.91044,595.325682 1825.68969,626.715411 C1899.46894,658.10514 1891.31614,815.066162 1891.31614,815.066162 L1891.31614,1201.73393 C1891.31614,1201.73393 1874.18218,1283.31792 1838.67948,1308.67099 C1803.17678,1334.02406 1753.92447,1350.79136 1753.92447,1350.79136 L1325.82864,1350.79136 C1325.82864,1350.79136 1199.83122,1354.58372 1137.66429,1275.02696 C1125.79446,1259.83681 893.50116,959.578347 834.183717,897.752967 C806.193533,868.579361 759.719527,812.818544 738.348524,789.86199 C711.237638,760.739701 687.470857,747.048512 693.072823,740.982987 C712.449043,720.003395 766.464568,689.631836 791.905499,669.733483 C794.772823,667.490836 810.169135,692.409029 838.500831,723.195634 C879.64084,767.900378 1099.82627,1004.98532 1137.66429,1035.06163 C1159.43611,1052.3674 1183.43385,1058.78701 1194.71079,1046.67314 C1272.33446,963.288564 1256.57203,834.403571 1386.23279,732.040942 Z"
          id="path-1"
        />
        <path
          d="M1433.11892,893.859994 C1357.64228,980.000334 1339.87783,1112.7529 1339.87783,1172.64118 C1339.87783,1232.52946 1433.11892,1220.29802 1433.11892,1220.29802 L1673.66241,1220.29802 C1673.66241,1220.29802 1715.95872,1225.33488 1744.65523,1194.6396 C1773.35175,1163.94433 1766.79129,1083.40814 1766.79129,1083.40814 L1766.79129,810.36904 C1766.79129,810.36904 1749.69945,772.194106 1673.66241,772.194106 C1597.62536,772.194106 1509.94875,806.175292 1433.11892,893.859994 Z"
          id="path-2"
        />
      </defs>
      <g id="3.-Stock" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
        <polygon
          id="anasthesie"
          onMouseEnter={() => setActiveItem('anasthesie')}
          onMouseLeave={() => setActiveItem(null)}
          stroke="#000000"
          strokeWidth="8"
          fill="#979797"
          points="1886.08075 989.935608 2248.89538 996.773514 2230.89517 765.912768 2203.34361 525.232172 2192.09563 345.57228 2163.72146 168.038676 2107.66433 111.713064 2025.98648 82.704803 1942.26926 71.8452707 1867.94344 89.6283975 1684.66241 157.493334 1572.26825 225.375407 1752.84725 512.013362 1690.91764 618.089456 1789.05198 624.297563 1852.51598 654.497293 1879.20285 721.566346 1886.08075 845.676918"
        />
        <polygon
          id="opZentrum"
          onMouseEnter={() => setActiveItem('opZentrum')}
          onMouseLeave={() => setActiveItem(null)}
          stroke="#000000"
          strokeWidth="8"
          fill="#979797"
          points="1888.07442 988.304331 2251.80877 996.704964 2295.78388 1475.22131 2295.78388 1623.85009 2262.56548 1715.25639 2210.19294 1757.6834 2098.26721 1789.99351 1941.36668 1797.277 1356.10015 1797.277 715.153534 1797.277 637.548723 1789.99351 585.650327 1757.6834 529.913106 1692.26915 497.140283 1642.6272 478.80304 1576.33893 484.932592 1510.52479 507.331448 1423.10013 551.535058 1326.01557 654.246468 1155.702 722.334193 1058.64029 839.738247 896.404244 916.788942 971.849717 946.990196 1022.59051 1015.296 1108.18853 1123.71987 1244.9661 1179.43424 1307.72974 1264.4882 1339.42289 1356.10015 1346.84062 1495.8288 1346.84062 1638.82502 1346.84062 1750.56795 1346.84062 1802.79767 1326.01557 1853.26222 1290.23795 1881.69352 1223.01282 1881.69352 1162.25999 1888.07442 1078.91408"
        />
        <polygon
          id="privatklinik"
          onMouseEnter={() => setActiveItem('privatklinik')}
          onMouseLeave={() => setActiveItem(null)}
          stroke="#979797"
          fill="#979797"
          points="698.330113 743.428224 802.67055 675.539784 849.182174 631.31673 927.650024 565.844608 1051.85045 429.964197 1128.12995 310.463642 1184.50126 179.840777 1198.17136 112.787021 1184.50126 64.1047834 1110.02692 32.1488531 853.516886 25.8022248 142.785918 6.07112301 58.6002648 25.8022248 34.1448952 32.1488531 17.8298903 64.1047834 9.70666313 106.194754 9.70666313 145.73122 40.4686733 225.078355 226.600257 672.84412 297.241486 844.37446 334.887103 874.765155 391.578317 881.945814 439.814977 874.765155 525.131713 844.37446"
        />
        <polygon
          id="urologie"
          onMouseEnter={() => setActiveItem('urologie')}
          onMouseLeave={() => setActiveItem(null)}
          stroke="#000000"
          strokeWidth="8"
          fill="#979797"
          points="991.233143 893.767079 1094.7848 797.594497 1255.79683 956.38775 1299.7117 849.435768 1332.99865 797.594497 1373.96897 749.169323 1446.14687 695.088738 1508.92765 667.440061 1606.77769 635.604094 1687.36444 622.762311 1751.7276 512.001937 1566.43004 226.180875 1427.89531 324.819246 1246.47657 486.981026 1073.53524 648.497289 975.091092 749.169323 910.076776 811.559384"
        />
        <path
          d="M8.35570017,150.442244 L293.499148,832.982581 C294.647768,835.205309 297.699225,841.423867 298.304438,842.607648 C300.33933,846.58784 302.18998,849.780247 304.295106,852.806671 C311.596981,863.304176 321.502988,870.840996 336.779032,875.743497 C356.482293,882.066813 383.966101,883.389703 420.985724,878.638876 C475.741345,871.611941 593.811995,814.952349 690.69321,748.839958 C694.553863,746.205423 698.492999,746.778924 702.530812,748.837996 C704.803712,749.997055 707.308847,751.784216 710.212081,754.22902 C715.13445,758.374132 721.405901,764.600282 729.275683,773.055129 C740.939017,785.585553 743.177411,788.15397 780.751181,831.688616 C781.753912,832.850426 782.707664,833.954839 783.631397,835.023754 C806.182169,861.118807 820.481391,877.128551 832.820474,889.724371 C836.832515,893.819889 837.209718,899.171789 835.061713,904.528161 C833.723054,907.866309 831.39684,911.382294 827.833933,915.818026 C825.171988,919.132084 809.377974,936.954009 804.763763,942.60623 C800.109807,948.307138 796.114553,953.674196 792.619447,959.023307 C779.438017,979.196923 768.932748,994.084254 729.866068,1048.58457 C693.665394,1099.08664 672.706895,1128.90242 649.400595,1163.67992 C602.777423,1233.25072 565.960587,1295.39583 537.953004,1354.27453 C505.274606,1422.97242 486.031003,1484.60925 481.910048,1538.94576 C477.314507,1599.53989 491.626104,1650.14755 526.924884,1690.37211 C531.032619,1695.05306 553.465625,1722.03145 560.488214,1729.95132 C577.564509,1749.20947 592.930626,1763.34899 609.769827,1774.19427 C630.121826,1787.30197 651.703155,1794.75882 675.666663,1796.0109 C742.336646,1799.49437 803.446197,1799.47595 957.901984,1797.3226 C993.407772,1796.82759 1011.54699,1796.59049 1032.53781,1796.3658 C1078.15972,1795.87745 1115.99293,1795.73607 1151.55941,1796.00022 C1320.576,1797.2555 1490.20964,1797.24978 1674.13687,1796.48596 C1700.3753,1796.377 1772.54821,1796.03415 1782.34254,1796.00005 C1795.7622,1795.95332 1794.29056,1795.91505 1848.45622,1797.51863 C1921.54682,1799.68249 1970.2053,1799.7777 2022.14368,1796.53804 C2101.49985,1791.58819 2165.00605,1779.0048 2210.35996,1756.64878 C2250.1129,1737.0536 2274.2601,1703.72309 2286.41929,1656.98534 C2296.08102,1619.84735 2297.91513,1578.40533 2295.00955,1518.98991 C2290.21916,1421.03241 2282.16872,1310.68555 2271.07951,1186.30245 C2264.11733,1108.21052 2256.10389,1026.11327 2246.58601,934.125046 C2241.95971,889.412868 2237.17552,844.218999 2231.17645,788.307432 C2229.75675,775.075782 2219.66492,681.361945 2216.94444,655.904063 C2206.34298,556.696875 2200.3881,497.214493 2196.72924,451.740041 C2196.70969,451.497088 2196.70044,451.280776 2196.6914,450.971541 C2196.69727,451.172318 2196.50353,438.356645 2196.32815,430.759905 C2196.00699,416.848643 2195.49596,402.132723 2194.7248,386.418296 C2192.54838,342.067789 2188.73261,298.299998 2182.83347,257.426343 C2179.0643,231.310748 2174.54431,207.192356 2169.21739,185.472118 C2162.6714,158.781206 2141.48588,135.57491 2108.78712,116.0785 C2083.23292,100.841984 2052.26611,88.8693725 2021.73942,80.8388487 C1982.63547,70.5519444 1940.33068,70.9169563 1893.58043,80.6884739 C1865.82456,86.4898735 1836.69576,95.543055 1804.77543,107.910087 C1778.91504,117.929288 1752.99804,129.329127 1718.01872,145.69501 C1711.16899,148.899818 1674.49456,166.223277 1664.30277,170.965259 C1591.56177,204.809807 1502.83887,265.667774 1400.90929,349.20549 C1356.50198,385.600078 1310.12197,425.867384 1261.83556,469.704826 C1184.18316,540.202565 1111.38846,610.590425 1022.56424,699.351096 C1015.66422,706.24618 1008.82098,713.096442 1000.27569,721.659413 C999.811948,722.124113 984.397186,737.57439 980.267928,741.710176 C965.310289,756.691459 955.835137,766.13217 947.782444,774.052273 C938.183361,783.493303 931.261337,790.114625 926.367551,794.504821 C923.638992,796.9526 921.49751,798.746767 919.831089,799.95814 C918.726525,800.761082 917.75733,801.369204 916.757569,801.827411 C915.833289,802.251024 914.891538,802.552914 913.77113,802.676451 C911.418625,802.935841 908.924316,802.313108 906.910231,800.288248 C870.68854,763.872762 868.244534,761.403265 857.58093,750.30963 C856.854021,749.553407 856.130999,748.799532 855.410156,748.046213 C841.56172,733.573858 828.062907,718.87478 798.29934,685.926088 C795.957623,683.333774 795.620854,680.253383 796.387302,677.398535 C796.761542,676.004574 797.386249,674.72774 798.240368,673.380566 C799.438183,671.491293 801.216919,669.300961 803.623942,666.676756 C807.81611,662.106333 814.089578,656.046923 822.389286,648.496801 C836.413536,635.739147 855.581616,619.2796 881.433581,597.624345 C882.744696,596.526072 884.07604,595.411877 885.4304,594.279397 C896.559555,584.973498 933.608127,554.197833 939.759957,549.057613 C957.227611,534.462347 966.882943,526.138737 970.012819,522.898385 C1033.67474,456.989367 1090.73321,377.993426 1132.28428,300.049422 C1172.15622,225.255217 1194.7249,156.845196 1194.7249,110.782685 C1194.7249,73.2922139 1166.64398,50.1797848 1118.08642,38.4245453 C1102.73415,34.7079312 1086.25156,32.4076257 1069.48251,31.2708456 C1057.98792,30.4916235 1047.82915,30.3418431 1039.83247,30.5502419 C1039.17786,30.5673016 1038.6096,30.5854641 1038.13148,30.603462 C1037.85516,30.6138637 1037.67652,30.6215665 1037.59936,30.6253011 L1037.30297,30.6396464 L1037.00632,30.6319944 L164.992297,8.13764398 C164.891168,8.13394547 164.673,8.12682015 164.342753,8.11738073 C163.77942,8.10127902 163.113874,8.08508566 162.351079,8.06991199 C141.32786,7.65171411 115.842591,8.69991415 91.538635,12.4261667 C68.3635827,15.979337 49.8305185,21.5961515 37.8626137,29.3489483 C24.9965678,37.68356 16.2235519,57.6935096 11.6316981,85.8464845 C8.27628313,106.418768 7.51185772,128.254212 8.21730491,147.271259 C8.26158272,148.464875 8.30866541,149.525147 8.35570017,150.442244 Z"
          id="building"
          stroke="#000000"
          strokeWidth="16"
        />
        <g id="floor">
          <use fill="#DDDDDD" fillRule="evenodd" xlinkHref="#path-1" />
          <path
            stroke="#000000"
            strokeWidth="12"
            d="M792.179678,677.075716 C787.3874,680.662942 781.595618,684.711565 774.353907,689.580372 C770.796096,691.972388 767.013198,694.48084 761.939603,697.820398 C761.471717,698.128372 751.854968,704.448389 749.032219,706.310795 C745.844665,708.413893 743.06808,710.256228 740.439209,712.014794 C719.838358,725.795601 706.6771,735.623625 698.859854,743.604844 C700.226625,745.496616 702.8406,748.132618 707.472486,752.330294 C707.951374,752.76429 719.191668,762.772044 723.110074,766.374882 C730.221992,772.914044 736.548397,779.12263 742.740111,785.773719 C748.149791,791.584751 755.246921,799.563074 765.399793,811.190214 C770.342588,816.850737 789.75781,839.206527 793.914102,843.974731 C794.776846,844.964492 795.619569,845.930601 796.446372,846.877725 C814.993058,868.123437 828.131357,882.778198 838.513262,893.599049 C861.974228,918.051943 913.099765,980.162247 984.008817,1069.36112 C986.129031,1072.02821 988.263434,1074.71517 990.411684,1077.42154 C1022.72664,1118.13205 1056.87005,1161.58132 1091.61792,1206.09625 C1111.59453,1231.68795 1145.57991,1275.4122 1142.39205,1271.33261 C1160.82776,1294.9253 1186.27398,1312.48027 1217.03312,1324.74879 C1239.42237,1333.67892 1263.45636,1339.36043 1287.70149,1342.40722 C1296.56297,1343.52081 1304.94933,1344.2131 1312.68174,1344.5638 C1317.8663,1344.79894 1322.04347,1344.853 1325.03504,1344.80645 C1325.35194,1344.80152 1325.55762,1344.7968 1325.64812,1344.79408 L1325.82864,1344.79136 L1752.91002,1344.79136 C1753.02497,1344.75087 1753.14565,1344.70823 1753.272,1344.66344 C1754.34799,1344.28203 1755.60004,1343.82851 1757.01336,1343.30485 C1761.0655,1341.80345 1765.58656,1340.04462 1770.45811,1338.04422 C1784.37124,1332.3311 1798.28042,1325.83854 1811.22968,1318.70334 C1820.02606,1313.85643 1828.07024,1308.87439 1835.1926,1303.7882 C1847.10557,1295.28094 1858.01723,1278.7301 1867.53252,1256.54954 C1872.78591,1244.30363 1877.28028,1231.13918 1881.00751,1217.96914 C1882.31293,1213.35649 1883.4282,1209.07604 1884.3537,1205.24053 C1884.67627,1203.90371 1884.95169,1202.71997 1885.18004,1201.70335 C1885.23249,1201.46984 1885.27785,1201.26581 1885.31614,1201.09209 L1885.31614,814.910442 L1885.32422,814.754932 C1885.3314,814.616585 1885.34496,814.324313 1885.36282,813.884689 C1885.39313,813.138279 1885.42358,812.257606 1885.45209,811.24925 C1886.22362,783.961397 1884.32688,750.952498 1877.55266,719.439323 C1867.92458,674.650254 1850.24751,643.684112 1823.34072,632.236492 C1785.49796,616.136111 1713.75804,613.604658 1637.45621,627.659359 C1547.69174,644.193862 1460.45193,681.091951 1389.95063,736.750259 C1347.61065,770.17619 1318.70981,807.823299 1295.6142,854.959229 C1289.61865,867.195571 1284.01082,880.027813 1278.03968,894.912224 C1275.62395,900.933988 1273.18609,907.191299 1270.29067,914.764971 C1268.6987,918.929153 1263.37209,932.971592 1262.82096,934.419042 C1252.12064,962.521877 1245.22512,979.031188 1236.66159,995.809537 C1225.75863,1017.1715 1213.71794,1035.06114 1199.10242,1050.76136 C1185.43138,1065.44701 1158.7923,1059.52022 1133.93083,1039.75858 C1116.78485,1026.12975 1063.34298,971.586065 984.962276,888.737791 C931.686789,832.425686 867.806668,763.901319 834.085818,727.258595 C822.51323,714.683257 815.238255,705.868757 800.948014,687.800611 C796.172023,681.761994 793.978474,679.061687 792.179678,677.075716 Z"
          />
        </g>
        <polygon
          id="stairwell2"
          stroke="#000000"
          strokeWidth="8"
          fill="#AAAAAA"
          points="988.321327 893.153811 1094.69447 796.829017 1254.86829 954.763519 1232.24093 1001.9605 1209.60786 1035.48738 1184.884 1056.55521 1161.89675 1056.55521 1132.95133 1042.36527"
        />
        <g id="stairwell">
          <use fill="#AAAAAA" fillRule="evenodd" xlinkHref="#path-2" />
          <path
            stroke="#000000"
            strokeWidth="12"
            d="M1760.79129,811.863666 C1760.77473,811.835322 1760.75788,811.806629 1760.74074,811.777589 C1760.10017,810.691858 1759.26005,809.451921 1758.20089,808.09349 C1755.07862,804.088989 1750.84266,800.036476 1745.32418,796.213821 C1729.14169,785.004217 1705.74601,778.194106 1673.66241,778.194106 C1591.38356,778.194106 1507.65212,817.900862 1437.63169,897.814102 C1403.94655,936.258436 1379.58144,986.846193 1363.98759,1044.65768 C1351.8953,1089.48777 1345.87783,1136.47544 1345.87783,1172.64118 C1345.87783,1195.39771 1360.98949,1207.97456 1387.61815,1213.03312 C1400.62966,1215.50487 1414.59918,1215.8079 1427.34689,1214.82997 C1428.75429,1214.722 1430.00691,1214.60677 1431.08667,1214.49223 C1431.71834,1214.42523 1432.14162,1214.37481 1432.33853,1214.34898 L1432.72706,1214.29802 L1674.0184,1214.29802 L1674.3719,1214.34011 C1674.59018,1214.36611 1675.10252,1214.41381 1675.88199,1214.46435 C1688.78952,1215.30122 1704.51547,1213.23832 1719.45379,1205.90061 C1727.23235,1202.07977 1734.22675,1197.00869 1740.27229,1190.54206 C1749.20118,1180.99127 1755.22211,1164.81724 1758.51798,1143.93391 C1761.38767,1125.75086 1761.92603,1106.39144 1761.12075,1089.1309 C1761.05187,1087.65442 1760.97826,1086.34631 1760.90494,1085.22244 C1760.87954,1084.83315 1760.8561,1084.49582 1760.83524,1084.21243 C1760.82315,1084.04818 1760.81489,1083.94181 1760.8111,1083.89528 L1760.79129,1083.65211 L1760.79129,811.863659 Z"
          />
        </g>
        <path
          d="M1391.04056,982.486326 L1877.49409,986.598126"
          id="pathOpZentrum"
          stroke="#F5A623"
          strokeWidth="24"
        />
        <circle id="entryOpZentrum" fill="#F5A623" cx="1886" cy="987" r="25" />
        <path
          d="M1388.96937,982.246314 L1878.09277,986.118104"
          id="pathAnasthesie"
          stroke="#F5A623"
          strokeWidth="24"
        />
        <circle id="entryAnasthesie" fill="#F5A623" cx="1886" cy="986" r="25" />
        <path
          d="M1396.56714,978.586135 L1821.08941,978.586135 C1833.13854,1095.69658 1833.13854,1169.25121 1821.08941,1199.25 C1803.01572,1244.2482 1802.96353,1275.35813 1639.84776,1273.85573 C1476.73199,1272.35334 1353.43399,1292.76055 1269.8616,1260.1568 C1186.28921,1227.55305 1176.77845,1207.49904 1123.24451,1145.79288 C1087.55522,1104.65543 959.4864,956.594678 739.038047,701.610614"
          id="pathPrivatklinik"
          stroke="#F5A623"
          strokeWidth="24"
        />
        <circle id="entryPrivatklinik" fill="#F5A623" cx="739" cy="702" r="25" />
        <path
          d="M1393.22453,978.295492 C1675.64288,978.295492 1816.85205,978.295492 1816.85205,978.295492 C1816.85205,978.295492 1830.14747,818.459344 1816.85205,774.448846 C1803.55664,730.438349 1783.02259,705.079977 1732.8027,700.075266 C1682.58281,695.070555 1601.80555,711.591952 1560.75501,724.479083 C1527.27,734.99114 1467.91879,762.143008 1426.67046,796.019766 C1389.76466,826.330068 1365.06847,782.931699 1349.18391,774.448846"
          id="pathUrologie"
          stroke="#F5A623"
          strokeWidth="24"
        />
        <circle id="entryUrologie" fill="#F5A623" cx="1349" cy="772" r="25" />
        <g id="Group" transform="translate(1265.000000, 953.000000)" fill="#F5A623">
          <circle id="start" stroke="#F5A623" cx="121" cy="25" r="25" />
          {!activeItem && (
            <text id="Standort" fontFamily="Helvetica" fontSize="64" fontWeight="normal">
              <tspan x="180" y="50">
                Standort
              </tspan>
            </text>
          )}
        </g>
      </g>
    </svg>
  ),
  p => Object.keys(p),
);

const enhance = compose(
  graphql(
    gql`
      query orgList {
        items: orgList(query: { state: { eq: PUBLISHED } }) {
          id
          name
          art
          logo {
            id
            url
          }
          color
          etage
        }
      }
    `,
    {
      options: () => ({}),
      props: ({ ownProps, data }) => ({
        ...ownProps,
        items: data.items || [],
      }),
    },
  ),
  withPropsOnChange(['items'], ({ items }) => ({
    groupedItems: groupBy(items, 'art'),
    filteredItems: items.filter(({ etage }) => etage.includes('3. Stock')),
  })),
  withState('activeItem', 'setActiveItem'),
);

const component = enhance(
  ({ attributes, className, filteredItems, groupedItems, activeItem, setActiveItem }) => (
    <Container>
      <Grid size={3} className={className} {...attributes}>
        <Grid.Item medium={1}>
          {Object.keys(groupedItems).map(key => [
            <h2 key={1}>{key}</h2>,
            <ul key={2}>
              {groupedItems[key].map(item => (
                <Item
                  color={item.color}
                  isActive={activeItem === camelCase(item.name)}
                  onMouseEnter={() => setActiveItem(camelCase(item.name))}
                  onMouseLeave={() => setActiveItem(null)}
                  key={item.id}
                >
                  {item.name}
                </Item>
              ))}
            </ul>,
          ])}
        </Grid.Item>
        <Grid.Item medium={2}>
          <h2>ERDGESCHOSS</h2>
          <Map
            activeItem={activeItem}
            setActiveItem={id => setActiveItem(id)}
            items={filteredItems}
          />
        </Grid.Item>
      </Grid>
    </Container>
  ),
);
component.displayName = 'GZKBlock';

export default {
  type: 'pathfinder',
  label: 'Wegblock',
  category: 'Sammlungen',
  isVoid: true,
  kind: 'block',
  component,
};
