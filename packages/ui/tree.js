import React from 'react';
import { Tree as AntTree } from 'antd';
import { createComponent } from 'olymp-fela';
var Tree = createComponent(function () { return ({
    paddingRight: 8,
    paddingLeft: 13,
    paddingY: 0,
    '& .anticon': {
        marginLeft: 3,
    },
    '& li': {
        padding: 0,
        paddingTop: '0.7rem !important',
        '> .ant-tree-switcher': {
            position: 'absolute',
            onAfter: {
                left: -8,
                top: 2,
                position: 'absolute',
            },
        },
        '> .ant-tree-node-content-wrapper': {
            width: '100%',
            paddingLeft: 10,
        },
    },
}); }, AntTree, function (p) { return Object.keys(p); });
Tree.Title = createComponent(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return ({
        hasFlex: {
            display: 'flex',
            '> a:first-child': {
                flex: '1 1 0%',
            },
        },
        '> a': {
            color: disabled ? theme.dark3 : theme.dark1,
        },
    });
}, function (_a) {
    var className = _a.className, children = _a.children;
    return React.createElement("span", { className: className }, children);
}, function (p) { return Object.keys(p); });
Tree.Node = AntTree.TreeNode;
export default Tree;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhY2thZ2VzL3VpL3RyZWUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLEVBQUUsSUFBSSxJQUFJLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUN2QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTdDLElBQU0sSUFBSSxHQUFHLGVBQWUsQ0FDMUIsY0FBTSxPQUFBLENBQUM7SUFDTCxZQUFZLEVBQUUsQ0FBQztJQUNmLFdBQVcsRUFBRSxFQUFFO0lBQ2YsUUFBUSxFQUFFLENBQUM7SUFDWCxZQUFZLEVBQUU7UUFDWixVQUFVLEVBQUUsQ0FBQztLQUNkO0lBQ0QsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLENBQUM7UUFDVixVQUFVLEVBQUUsbUJBQW1CO1FBQy9CLHNCQUFzQixFQUFFO1lBQ3RCLFFBQVEsRUFBRSxVQUFVO1lBQ3BCLE9BQU8sRUFBRTtnQkFDUCxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUNSLEdBQUcsRUFBRSxDQUFDO2dCQUNOLFFBQVEsRUFBRSxVQUFVO2FBQ3JCO1NBQ0Y7UUFDRCxrQ0FBa0MsRUFBRTtZQUNsQyxLQUFLLEVBQUUsTUFBTTtZQUNiLFdBQVcsRUFBRSxFQUFFO1NBQ2hCO0tBQ0Y7Q0FDRixDQUFDLEVBdkJJLENBdUJKLEVBQ0YsT0FBTyxFQUNQLFVBQUEsQ0FBQyxJQUFJLE9BQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBZCxDQUFjLENBQ3BCLENBQUM7QUFFRixJQUFJLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FDMUIsVUFBQyxFQUFtQjtRQUFqQixnQkFBSyxFQUFFLHNCQUFRO0lBQU8sT0FBQSxDQUFDO1FBQ3hCLE9BQU8sRUFBRTtZQUNQLE9BQU8sRUFBRSxNQUFNO1lBQ2YsaUJBQWlCLEVBQUU7Z0JBQ2pCLElBQUksRUFBRSxRQUFRO2FBQ2Y7U0FDRjtRQUNELEtBQUssRUFBRTtZQUNMLEtBQUssRUFBRSxRQUFRLEdBQUcsS0FBSyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSztTQUM1QztLQUNGLENBQUM7QUFWdUIsQ0FVdkIsRUFDRixVQUFDLEVBQXVCO1FBQXJCLHdCQUFTLEVBQUUsc0JBQVE7SUFDcEIsT0FBQSw4QkFBTSxTQUFTLEVBQUUsU0FBUyxJQUN2QixRQUFRLENBQ0o7QUFGUCxDQUVPLEVBQ1QsVUFBQSxDQUFDLElBQUksT0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFkLENBQWMsQ0FDcEIsQ0FBQztBQUVGLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUU3QixlQUFlLElBQUksQ0FBQyIsImZpbGUiOiJwYWNrYWdlcy91aS90cmVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRyZWUgYXMgQW50VHJlZSB9IGZyb20gJ2FudGQnO1xuaW1wb3J0IHsgY3JlYXRlQ29tcG9uZW50IH0gZnJvbSAnb2x5bXAtZmVsYSc7XG5cbmNvbnN0IFRyZWUgPSBjcmVhdGVDb21wb25lbnQoXG4gICgpID0+ICh7XG4gICAgcGFkZGluZ1JpZ2h0OiA4LFxuICAgIHBhZGRpbmdMZWZ0OiAxMyxcbiAgICBwYWRkaW5nWTogMCxcbiAgICAnJiAuYW50aWNvbic6IHtcbiAgICAgIG1hcmdpbkxlZnQ6IDMsXG4gICAgfSxcbiAgICAnJiBsaSc6IHtcbiAgICAgIHBhZGRpbmc6IDAsXG4gICAgICBwYWRkaW5nVG9wOiAnMC43cmVtICFpbXBvcnRhbnQnLFxuICAgICAgJz4gLmFudC10cmVlLXN3aXRjaGVyJzoge1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgb25BZnRlcjoge1xuICAgICAgICAgIGxlZnQ6IC04LFxuICAgICAgICAgIHRvcDogMixcbiAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICAnPiAuYW50LXRyZWUtbm9kZS1jb250ZW50LXdyYXBwZXInOiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIHBhZGRpbmdMZWZ0OiAxMCxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSksXG4gIEFudFRyZWUsXG4gIHAgPT4gT2JqZWN0LmtleXMocClcbik7XG5cblRyZWUuVGl0bGUgPSBjcmVhdGVDb21wb25lbnQoXG4gICh7IHRoZW1lLCBkaXNhYmxlZCB9KSA9PiAoe1xuICAgIGhhc0ZsZXg6IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICc+IGE6Zmlyc3QtY2hpbGQnOiB7XG4gICAgICAgIGZsZXg6ICcxIDEgMCUnLFxuICAgICAgfSxcbiAgICB9LFxuICAgICc+IGEnOiB7XG4gICAgICBjb2xvcjogZGlzYWJsZWQgPyB0aGVtZS5kYXJrMyA6IHRoZW1lLmRhcmsxLFxuICAgIH0sXG4gIH0pLFxuICAoeyBjbGFzc05hbWUsIGNoaWxkcmVuIH0pID0+XG4gICAgPHNwYW4gY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvc3Bhbj4sXG4gIHAgPT4gT2JqZWN0LmtleXMocClcbik7XG5cblRyZWUuTm9kZSA9IEFudFRyZWUuVHJlZU5vZGU7XG5cbmV4cG9ydCBkZWZhdWx0IFRyZWU7XG4iXX0=
