import { memoize } from 'olymp-utils';
import parseQuery from './parse-query';
import stringifyQuery from './stringify-query';
export default memoize(function (urlOrString) {
    if (urlOrString === void 0) { urlOrString = ''; }
    var url = {};
    if (typeof urlOrString === 'string') {
        var _a = urlOrString.split('?'), pathname = _a[0], search = _a.slice(1);
        search = search.join('?');
        url = {
            pathname: pathname,
            search: search,
            query: parseQuery(search),
        };
    }
    else if (typeof urlOrString === 'object') {
        url = urlOrString;
        if (url.query) {
            url.search = stringifyQuery(url.query);
        }
        else if (url.search) {
            url.query = parseQuery(url.search);
        }
    }
    if (url.search) {
        url.url = url.pathname + "?" + url.search;
    }
    else {
        url.url = url.pathname;
    }
    if (!url.search)
        url.search = '';
    if (!url.query)
        url.query = {};
    return url;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhY2thZ2VzL3JvdXRlci91dGlscy91cmwtdG8tbG9jYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN0QyxPQUFPLFVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxjQUFjLE1BQU0sbUJBQW1CLENBQUM7QUFFL0MsZUFBZSxPQUFPLENBQUMsVUFBQyxXQUFnQjtJQUFoQiw0QkFBQSxFQUFBLGdCQUFnQjtJQUN0QyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7SUFDYixFQUFFLENBQUMsQ0FBQyxPQUFPLFdBQVcsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLElBQUEsMkJBQThDLEVBQTdDLGdCQUFRLEVBQUUsb0JBQVMsQ0FBMkI7UUFDbkQsTUFBTSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUIsR0FBRyxHQUFHO1lBQ0osUUFBUSxVQUFBO1lBQ1IsTUFBTSxRQUFBO1lBQ04sS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUM7U0FDMUIsQ0FBQztJQUNKLENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxXQUFXLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMzQyxHQUFHLEdBQUcsV0FBVyxDQUFDO1FBQ2xCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ2QsR0FBRyxDQUFDLE1BQU0sR0FBRyxjQUFjLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDdEIsR0FBRyxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JDLENBQUM7SUFDSCxDQUFDO0lBQ0QsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDZixHQUFHLENBQUMsR0FBRyxHQUFNLEdBQUcsQ0FBQyxRQUFRLFNBQUksR0FBRyxDQUFDLE1BQVEsQ0FBQztJQUM1QyxDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFDTixHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztRQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2pDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUFDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQy9CLE1BQU0sQ0FBQyxHQUFHLENBQUM7QUFDYixDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJwYWNrYWdlcy9yb3V0ZXIvdXRpbHMvdXJsLXRvLWxvY2F0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVtb2l6ZSB9IGZyb20gJ29seW1wLXV0aWxzJztcbmltcG9ydCBwYXJzZVF1ZXJ5IGZyb20gJy4vcGFyc2UtcXVlcnknO1xuaW1wb3J0IHN0cmluZ2lmeVF1ZXJ5IGZyb20gJy4vc3RyaW5naWZ5LXF1ZXJ5JztcblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZSgodXJsT3JTdHJpbmcgPSAnJykgPT4ge1xuICBsZXQgdXJsID0ge307XG4gIGlmICh0eXBlb2YgdXJsT3JTdHJpbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgbGV0IFtwYXRobmFtZSwgLi4uc2VhcmNoXSA9IHVybE9yU3RyaW5nLnNwbGl0KCc/Jyk7XG4gICAgc2VhcmNoID0gc2VhcmNoLmpvaW4oJz8nKTtcbiAgICB1cmwgPSB7XG4gICAgICBwYXRobmFtZSxcbiAgICAgIHNlYXJjaCxcbiAgICAgIHF1ZXJ5OiBwYXJzZVF1ZXJ5KHNlYXJjaCksXG4gICAgfTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgdXJsT3JTdHJpbmcgPT09ICdvYmplY3QnKSB7XG4gICAgdXJsID0gdXJsT3JTdHJpbmc7XG4gICAgaWYgKHVybC5xdWVyeSkge1xuICAgICAgdXJsLnNlYXJjaCA9IHN0cmluZ2lmeVF1ZXJ5KHVybC5xdWVyeSk7XG4gICAgfSBlbHNlIGlmICh1cmwuc2VhcmNoKSB7XG4gICAgICB1cmwucXVlcnkgPSBwYXJzZVF1ZXJ5KHVybC5zZWFyY2gpO1xuICAgIH1cbiAgfVxuICBpZiAodXJsLnNlYXJjaCkge1xuICAgIHVybC51cmwgPSBgJHt1cmwucGF0aG5hbWV9PyR7dXJsLnNlYXJjaH1gO1xuICB9IGVsc2Uge1xuICAgIHVybC51cmwgPSB1cmwucGF0aG5hbWU7XG4gIH1cbiAgaWYgKCF1cmwuc2VhcmNoKSB1cmwuc2VhcmNoID0gJyc7XG4gIGlmICghdXJsLnF1ZXJ5KSB1cmwucXVlcnkgPSB7fTtcbiAgcmV0dXJuIHVybDtcbn0pO1xuIl19
