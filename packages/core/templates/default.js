import serialize from 'serialize-javascript';
export default function (_a) {
    var helmet = _a.helmet, cssMarkup = _a.cssMarkup, styles = _a.styles, scripts = _a.scripts, root = _a.root, initialState = _a.initialState, asyncState = _a.asyncState, gaTrackingId = _a.gaTrackingId, hotjarId = _a.hotjarId;
    return "\n<!DOCTYPE html>\n<html lang=\"de\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta http-equiv=\"Content-Language\" content=\"de\" />\n    <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#8e44ad\">\n    <link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"/apple-icon-57x57.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"/apple-icon-60x60.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"/apple-icon-72x72.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"/apple-icon-76x76.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"/apple-icon-114x114.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"/apple-icon-120x120.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"/apple-icon-144x144.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/apple-icon-152x152.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-icon-180x180.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/android-icon-192x192.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/favicon-96x96.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">\n    <link rel=\"manifest\" href=\"/manifest.json\">\n    <link rel=\"apple-touch-startup-image\" href=\"/launch.png\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n    <meta name=\"msapplication-TileColor\" content=\"#8e44ad\">\n    <meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\">\n    <meta name=\"theme-color\" content=\"#8e44ad\">\n    " + helmet.title.toString() + "\n    " + helmet.meta.toString() + "\n    " + helmet.link.toString() + "\n    " + styles.map(function (style) {
        return "<link rel=\"stylesheet\" type=\"text/css\" href=\"" + style + "\" media=\"none\" onload=\"if(media!='all')media='all'\">";
    }) + "\n    " + styles.map(function (style) { return "<noscript><link rel=\"stylesheet\" href=\"" + style + "\"></noscript>"; }) + "\n    <style id=\"css-markup\">" + (cssMarkup || '') + "</style>\n    " + (gaTrackingId
        ? "<script type=\"text/javascript\">\n      var gaProperty = '" + gaTrackingId + "';\n      var disableStr = 'ga-disable-' + gaProperty;\n      if (document.cookie.indexOf(disableStr + '=true') > -1) {\n      window[disableStr] = true;\n      }\n      function gaOptout() {\n        document.cookie = disableStr + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';\n        window[disableStr] = true;\n      }\n    </script>\n    <script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n      ga('create', '" + gaTrackingId + "', 'auto');\n      ga('send', 'pageview');\n    </script>"
        : '') + "\n    " + (hotjarId
        ? "\n      <script>\n        (function(h,o,t,j,a,r){\n          h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};\n          h._hjSettings={hjid:" + hotjarId + ",hjsv:5};\n          a=o.getElementsByTagName('head')[0];\n          r=o.createElement('script');r.async=1;\n          r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;\n          a.appendChild(r);\n        })(window,document,'//static.hotjar.com/c/hotjar-','.js?sv=');\n      </script>"
        : '') + "\n  </head>\n  <body>\n    <div id=\"app\"><div>" + root + "</div></div>\n    <script type='text/javascript'>window.INITIAL_DATA=" + serialize(initialState) + "</script>\n    <script type='text/javascript'>window.ASYNC_STATE=" + serialize(asyncState) + "</script>\n    <script type='text/javascript'>function POLY() { window.POLYFILLED = true; if (window.GO) window.GO(); }</script>\n    <script async src=\"https://cdn.polyfill.io/v2/polyfill.min.js?callback=POLY\"></script>\n    " + scripts.map(function (script) { return "<script async src=\"" + script + "\"></script>"; }) + "\n  </body>\n</html>\n";
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhY2thZ2VzL2NvcmUvdGVtcGxhdGVzL2RlZmF1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sc0JBQXNCLENBQUM7QUFFN0MsZUFBZSxVQUFDLEVBVWY7UUFUQyxrQkFBTSxFQUNOLHdCQUFTLEVBQ1Qsa0JBQU0sRUFDTixvQkFBTyxFQUNQLGNBQUksRUFDSiw4QkFBWSxFQUNaLDBCQUFVLEVBQ1YsOEJBQVksRUFDWixzQkFBUTtJQUNKLE9BQUEsNjdEQTZCQSxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxjQUN2QixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxjQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxjQUN0QixNQUFNLENBQUMsR0FBRyxDQUNWLFVBQUEsS0FBSztRQUNILE9BQUEsdURBQWdELEtBQUssOERBQXNEO0lBQTNHLENBQTJHLENBQzlHLGNBQ0MsTUFBTSxDQUFDLEdBQUcsQ0FDVixVQUFBLEtBQUssSUFBSSxPQUFBLCtDQUEwQyxLQUFLLG1CQUFlLEVBQTlELENBQThELENBQ3hFLHdDQUN3QixTQUFTLElBQUksRUFBRSx3QkFDdEMsWUFBWTtVQUNWLGdFQUNrQixZQUFZLG91QkFnQmhCLFlBQVksOERBRXBCO1VBQ04sRUFBRSxnQkFDSixRQUFRO1VBQ04sNkpBSXdCLFFBQVEsa1NBTXhCO1VBQ1IsRUFBRSx5REFHZSxJQUFJLDZFQUM0QixTQUFTLENBQzVELFlBQVksQ0FDYix5RUFDbUQsU0FBUyxDQUMzRCxVQUFVLENBQ1gsNE9BR0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLHlCQUFzQixNQUFNLGlCQUFhLEVBQXpDLENBQXlDLENBQUMsMkJBR3JFO0FBekZLLENBeUZMLENBQUMiLCJmaWxlIjoicGFja2FnZXMvY29yZS90ZW1wbGF0ZXMvZGVmYXVsdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHByZWZlci10ZW1wbGF0ZSwgbWF4LWxlbiAqL1xuaW1wb3J0IHNlcmlhbGl6ZSBmcm9tICdzZXJpYWxpemUtamF2YXNjcmlwdCc7XG5cbmV4cG9ydCBkZWZhdWx0ICh7XG4gIGhlbG1ldCxcbiAgY3NzTWFya3VwLFxuICBzdHlsZXMsXG4gIHNjcmlwdHMsXG4gIHJvb3QsXG4gIGluaXRpYWxTdGF0ZSxcbiAgYXN5bmNTdGF0ZSxcbiAgZ2FUcmFja2luZ0lkLFxuICBob3RqYXJJZCxcbn0pID0+IGBcbjwhRE9DVFlQRSBodG1sPlxuPGh0bWwgbGFuZz1cImRlXCI+XG4gIDxoZWFkPlxuICAgIDxtZXRhIGNoYXJzZXQ9XCJ1dGYtOFwiPlxuICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsbWluaW11bS1zY2FsZT0xLGluaXRpYWwtc2NhbGU9MVwiPlxuICAgIDxtZXRhIGh0dHAtZXF1aXY9XCJ4LXVhLWNvbXBhdGlibGVcIiBjb250ZW50PVwiaWU9ZWRnZVwiPlxuICAgIDxtZXRhIGh0dHAtZXF1aXY9XCJDb250ZW50LUxhbmd1YWdlXCIgY29udGVudD1cImRlXCIgLz5cbiAgICA8bGluayByZWw9XCJtYXNrLWljb25cIiBocmVmPVwiL3NhZmFyaS1waW5uZWQtdGFiLnN2Z1wiIGNvbG9yPVwiIzhlNDRhZFwiPlxuICAgIDxsaW5rIHJlbD1cImFwcGxlLXRvdWNoLWljb25cIiBzaXplcz1cIjU3eDU3XCIgaHJlZj1cIi9hcHBsZS1pY29uLTU3eDU3LnBuZ1wiPlxuICAgIDxsaW5rIHJlbD1cImFwcGxlLXRvdWNoLWljb25cIiBzaXplcz1cIjYweDYwXCIgaHJlZj1cIi9hcHBsZS1pY29uLTYweDYwLnBuZ1wiPlxuICAgIDxsaW5rIHJlbD1cImFwcGxlLXRvdWNoLWljb25cIiBzaXplcz1cIjcyeDcyXCIgaHJlZj1cIi9hcHBsZS1pY29uLTcyeDcyLnBuZ1wiPlxuICAgIDxsaW5rIHJlbD1cImFwcGxlLXRvdWNoLWljb25cIiBzaXplcz1cIjc2eDc2XCIgaHJlZj1cIi9hcHBsZS1pY29uLTc2eDc2LnBuZ1wiPlxuICAgIDxsaW5rIHJlbD1cImFwcGxlLXRvdWNoLWljb25cIiBzaXplcz1cIjExNHgxMTRcIiBocmVmPVwiL2FwcGxlLWljb24tMTE0eDExNC5wbmdcIj5cbiAgICA8bGluayByZWw9XCJhcHBsZS10b3VjaC1pY29uXCIgc2l6ZXM9XCIxMjB4MTIwXCIgaHJlZj1cIi9hcHBsZS1pY29uLTEyMHgxMjAucG5nXCI+XG4gICAgPGxpbmsgcmVsPVwiYXBwbGUtdG91Y2gtaWNvblwiIHNpemVzPVwiMTQ0eDE0NFwiIGhyZWY9XCIvYXBwbGUtaWNvbi0xNDR4MTQ0LnBuZ1wiPlxuICAgIDxsaW5rIHJlbD1cImFwcGxlLXRvdWNoLWljb25cIiBzaXplcz1cIjE1MngxNTJcIiBocmVmPVwiL2FwcGxlLWljb24tMTUyeDE1Mi5wbmdcIj5cbiAgICA8bGluayByZWw9XCJhcHBsZS10b3VjaC1pY29uXCIgc2l6ZXM9XCIxODB4MTgwXCIgaHJlZj1cIi9hcHBsZS1pY29uLTE4MHgxODAucG5nXCI+XG4gICAgPGxpbmsgcmVsPVwiaWNvblwiIHR5cGU9XCJpbWFnZS9wbmdcIiBzaXplcz1cIjE5MngxOTJcIiBocmVmPVwiL2FuZHJvaWQtaWNvbi0xOTJ4MTkyLnBuZ1wiPlxuICAgIDxsaW5rIHJlbD1cImljb25cIiB0eXBlPVwiaW1hZ2UvcG5nXCIgc2l6ZXM9XCIzMngzMlwiIGhyZWY9XCIvZmF2aWNvbi0zMngzMi5wbmdcIj5cbiAgICA8bGluayByZWw9XCJpY29uXCIgdHlwZT1cImltYWdlL3BuZ1wiIHNpemVzPVwiOTZ4OTZcIiBocmVmPVwiL2Zhdmljb24tOTZ4OTYucG5nXCI+XG4gICAgPGxpbmsgcmVsPVwiaWNvblwiIHR5cGU9XCJpbWFnZS9wbmdcIiBzaXplcz1cIjE2eDE2XCIgaHJlZj1cIi9mYXZpY29uLTE2eDE2LnBuZ1wiPlxuICAgIDxsaW5rIHJlbD1cIm1hbmlmZXN0XCIgaHJlZj1cIi9tYW5pZmVzdC5qc29uXCI+XG4gICAgPGxpbmsgcmVsPVwiYXBwbGUtdG91Y2gtc3RhcnR1cC1pbWFnZVwiIGhyZWY9XCIvbGF1bmNoLnBuZ1wiPlxuICAgIDxtZXRhIG5hbWU9XCJhcHBsZS1tb2JpbGUtd2ViLWFwcC1jYXBhYmxlXCIgY29udGVudD1cInllc1wiPlxuICAgIDxtZXRhIG5hbWU9XCJhcHBsZS1tb2JpbGUtd2ViLWFwcC1zdGF0dXMtYmFyLXN0eWxlXCIgY29udGVudD1cImJsYWNrXCI+XG4gICAgPG1ldGEgbmFtZT1cIm1zYXBwbGljYXRpb24tVGlsZUNvbG9yXCIgY29udGVudD1cIiM4ZTQ0YWRcIj5cbiAgICA8bWV0YSBuYW1lPVwibXNhcHBsaWNhdGlvbi1UaWxlSW1hZ2VcIiBjb250ZW50PVwiL21zLWljb24tMTQ0eDE0NC5wbmdcIj5cbiAgICA8bWV0YSBuYW1lPVwidGhlbWUtY29sb3JcIiBjb250ZW50PVwiIzhlNDRhZFwiPlxuICAgICR7aGVsbWV0LnRpdGxlLnRvU3RyaW5nKCl9XG4gICAgJHtoZWxtZXQubWV0YS50b1N0cmluZygpfVxuICAgICR7aGVsbWV0LmxpbmsudG9TdHJpbmcoKX1cbiAgICAke3N0eWxlcy5tYXAoXG4gICAgICBzdHlsZSA9PlxuICAgICAgICBgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCIke3N0eWxlfVwiIG1lZGlhPVwibm9uZVwiIG9ubG9hZD1cImlmKG1lZGlhIT0nYWxsJyltZWRpYT0nYWxsJ1wiPmBcbiAgICApfVxuICAgICR7c3R5bGVzLm1hcChcbiAgICAgIHN0eWxlID0+IGA8bm9zY3JpcHQ+PGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCIke3N0eWxlfVwiPjwvbm9zY3JpcHQ+YFxuICAgICl9XG4gICAgPHN0eWxlIGlkPVwiY3NzLW1hcmt1cFwiPiR7Y3NzTWFya3VwIHx8ICcnfTwvc3R5bGU+XG4gICAgJHtnYVRyYWNraW5nSWRcbiAgICAgID8gYDxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgICAgdmFyIGdhUHJvcGVydHkgPSAnJHtnYVRyYWNraW5nSWR9JztcbiAgICAgIHZhciBkaXNhYmxlU3RyID0gJ2dhLWRpc2FibGUtJyArIGdhUHJvcGVydHk7XG4gICAgICBpZiAoZG9jdW1lbnQuY29va2llLmluZGV4T2YoZGlzYWJsZVN0ciArICc9dHJ1ZScpID4gLTEpIHtcbiAgICAgIHdpbmRvd1tkaXNhYmxlU3RyXSA9IHRydWU7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBnYU9wdG91dCgpIHtcbiAgICAgICAgZG9jdW1lbnQuY29va2llID0gZGlzYWJsZVN0ciArICc9dHJ1ZTsgZXhwaXJlcz1UaHUsIDMxIERlYyAyMDk5IDIzOjU5OjU5IFVUQzsgcGF0aD0vJztcbiAgICAgICAgd2luZG93W2Rpc2FibGVTdHJdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICA8L3NjcmlwdD5cbiAgICA8c2NyaXB0PlxuICAgICAgKGZ1bmN0aW9uKGkscyxvLGcscixhLG0pe2lbJ0dvb2dsZUFuYWx5dGljc09iamVjdCddPXI7aVtyXT1pW3JdfHxmdW5jdGlvbigpe1xuICAgICAgKGlbcl0ucT1pW3JdLnF8fFtdKS5wdXNoKGFyZ3VtZW50cyl9LGlbcl0ubD0xKm5ldyBEYXRlKCk7YT1zLmNyZWF0ZUVsZW1lbnQobyksXG4gICAgICBtPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pXG4gICAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2h0dHBzOi8vd3d3Lmdvb2dsZS1hbmFseXRpY3MuY29tL2FuYWx5dGljcy5qcycsJ2dhJyk7XG5cbiAgICAgIGdhKCdjcmVhdGUnLCAnJHtnYVRyYWNraW5nSWR9JywgJ2F1dG8nKTtcbiAgICAgIGdhKCdzZW5kJywgJ3BhZ2V2aWV3Jyk7XG4gICAgPC9zY3JpcHQ+YFxuICAgICAgOiAnJ31cbiAgICAke2hvdGphcklkXG4gICAgICA/IGBcbiAgICAgIDxzY3JpcHQ+XG4gICAgICAgIChmdW5jdGlvbihoLG8sdCxqLGEscil7XG4gICAgICAgICAgaC5oaj1oLmhqfHxmdW5jdGlvbigpeyhoLmhqLnE9aC5oai5xfHxbXSkucHVzaChhcmd1bWVudHMpfTtcbiAgICAgICAgICBoLl9oalNldHRpbmdzPXtoamlkOiR7aG90amFySWR9LGhqc3Y6NX07XG4gICAgICAgICAgYT1vLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XG4gICAgICAgICAgcj1vLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO3IuYXN5bmM9MTtcbiAgICAgICAgICByLnNyYz10K2guX2hqU2V0dGluZ3MuaGppZCtqK2guX2hqU2V0dGluZ3MuaGpzdjtcbiAgICAgICAgICBhLmFwcGVuZENoaWxkKHIpO1xuICAgICAgICB9KSh3aW5kb3csZG9jdW1lbnQsJy8vc3RhdGljLmhvdGphci5jb20vYy9ob3RqYXItJywnLmpzP3N2PScpO1xuICAgICAgPC9zY3JpcHQ+YFxuICAgICAgOiAnJ31cbiAgPC9oZWFkPlxuICA8Ym9keT5cbiAgICA8ZGl2IGlkPVwiYXBwXCI+PGRpdj4ke3Jvb3R9PC9kaXY+PC9kaXY+XG4gICAgPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPndpbmRvdy5JTklUSUFMX0RBVEE9JHtzZXJpYWxpemUoXG4gICAgICBpbml0aWFsU3RhdGVcbiAgICApfTwvc2NyaXB0PlxuICAgIDxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cuQVNZTkNfU1RBVEU9JHtzZXJpYWxpemUoXG4gICAgICBhc3luY1N0YXRlXG4gICAgKX08L3NjcmlwdD5cbiAgICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+ZnVuY3Rpb24gUE9MWSgpIHsgd2luZG93LlBPTFlGSUxMRUQgPSB0cnVlOyBpZiAod2luZG93LkdPKSB3aW5kb3cuR08oKTsgfTwvc2NyaXB0PlxuICAgIDxzY3JpcHQgYXN5bmMgc3JjPVwiaHR0cHM6Ly9jZG4ucG9seWZpbGwuaW8vdjIvcG9seWZpbGwubWluLmpzP2NhbGxiYWNrPVBPTFlcIj48L3NjcmlwdD5cbiAgICAke3NjcmlwdHMubWFwKHNjcmlwdCA9PiBgPHNjcmlwdCBhc3luYyBzcmM9XCIke3NjcmlwdH1cIj48L3NjcmlwdD5gKX1cbiAgPC9ib2R5PlxuPC9odG1sPlxuYDtcbiJdfQ==
